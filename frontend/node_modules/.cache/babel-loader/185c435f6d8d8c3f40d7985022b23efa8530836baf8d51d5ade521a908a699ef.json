{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adity\\\\Desktop\\\\AMI\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useUser } from './UserContext';\nimport './Chatbot.css';\nimport ReactMarkdown from 'react-markdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const {\n    userEmail\n  } = useUser();\n  const [showChat, setShowChat] = useState(false);\n  const [query, setQuery] = useState('');\n  const [messages, setMessages] = useState([]);\n  const handleSend = async () => {\n    if (!query.trim()) return;\n    const userMessage = {\n      sender: 'user',\n      text: query\n    };\n    setMessages(prev => [...prev, userMessage]);\n    try {\n      const response = await fetch('http://localhost:7000/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query\n        })\n      });\n      const data = await response.json();\n      const aiMessage = {\n        sender: 'bot',\n        text: data.response\n      };\n      setMessages(prev => [...prev, aiMessage]);\n    } catch (err) {\n      setMessages(prev => [...prev, {\n        sender: 'bot',\n        text: 'Error contacting server.'\n      }]);\n    }\n    setQuery('');\n  };\n  const handlePrediction = () => {\n    window.location.href = 'http://localhost:8501';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome \", userEmail]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-icon\",\n      onClick: () => setShowChat(!showChat),\n      children: \"\\uD83D\\uDCAC Start Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"prediction-button\",\n      onClick: handlePrediction,\n      children: \"Check Prediction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), showChat && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: \"Cybersecurity Chatbot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Ask me anything about cybersecurity! I'm here to assist you.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-message ${msg.sender}`,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.sender === 'user' ? 'You' : 'Bot', \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), ' ', msg.sender === 'bot' ? /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 19\n          }, this) : msg.text]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: query,\n          onChange: e => setQuery(e.target.value),\n          placeholder: \"Ask a cybersecurity question...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSend,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"EiQ6Q8o2vW0brZsOE12DaNC6+Ts=\", false, function () {\n  return [useUser];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useUser","ReactMarkdown","jsxDEV","_jsxDEV","Home","_s","userEmail","showChat","setShowChat","query","setQuery","messages","setMessages","handleSend","trim","userMessage","sender","text","prev","response","fetch","method","headers","body","JSON","stringify","data","json","aiMessage","err","handlePrediction","window","location","href","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","msg","index","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/adity/Desktop/AMI/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useUser } from './UserContext';\r\nimport './Chatbot.css';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nconst Home = () => {\r\n  const { userEmail } = useUser();\r\n  const [showChat, setShowChat] = useState(false);\r\n  const [query, setQuery] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const handleSend = async () => {\r\n    if (!query.trim()) return;\r\n\r\n    const userMessage = { sender: 'user', text: query };\r\n    setMessages(prev => [...prev, userMessage]);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:7000/chat', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ query })\r\n      });\r\n\r\n      const data = await response.json();\r\n      const aiMessage = { sender: 'bot', text: data.response };\r\n      setMessages(prev => [...prev, aiMessage]);\r\n    } catch (err) {\r\n      setMessages(prev => [...prev, { sender: 'bot', text: 'Error contacting server.' }]);\r\n    }\r\n\r\n    setQuery('');\r\n  };\r\n\r\n  const handlePrediction = () => {\r\n    window.location.href = 'http://localhost:8501';\r\n  };\r\n\r\n  return (\r\n    <div className=\"home-container\">\r\n      <h1>Welcome {userEmail}</h1>\r\n\r\n      <div className=\"chat-icon\" onClick={() => setShowChat(!showChat)}>\r\n        ðŸ’¬ Start Chat\r\n      </div>\r\n\r\n      <button className=\"prediction-button\" onClick={handlePrediction}>\r\n        Check Prediction\r\n      </button>\r\n\r\n      {showChat && (\r\n        <div className=\"chat-window\">\r\n          <div className=\"chat-header\">Cybersecurity Chatbot</div>\r\n          <div className=\"chat-body\">\r\n            <p>Ask me anything about cybersecurity! I'm here to assist you.</p>\r\n            {messages.map((msg, index) => (\r\n              <div key={index} className={`chat-message ${msg.sender}`}>\r\n                <strong>{msg.sender === 'user' ? 'You' : 'Bot'}:</strong>{' '}\r\n                {msg.sender === 'bot' ? (\r\n                  <ReactMarkdown>{msg.text}</ReactMarkdown>\r\n                ) : (\r\n                  msg.text\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"chat-input\">\r\n            <input\r\n              type=\"text\"\r\n              value={query}\r\n              onChange={(e) => setQuery(e.target.value)}\r\n              placeholder=\"Ask a cybersecurity question...\"\r\n            />\r\n            <button onClick={handleSend}>Send</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}